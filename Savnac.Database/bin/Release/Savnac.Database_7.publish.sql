/*
Deployment script for Savnac.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Savnac.Database"
:setvar DefaultFilePrefix "Savnac.Database"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL12.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                RECOVERY FULL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[Announcement]...';


GO
CREATE TABLE [dbo].[Announcement] (
    [announcementId] INT           IDENTITY (1, 1) NOT NULL,
    [username]       VARCHAR (50)  NULL,
    [title]          VARCHAR (50)  NULL,
    [body]           VARCHAR (MAX) NULL,
    [timePosted]     DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([announcementId] ASC)
);


GO
PRINT N'Creating [dbo].[Assignment]...';


GO
CREATE TABLE [dbo].[Assignment] (
    [assignmentId] INT         IDENTITY (1, 1) NOT NULL,
    [courseId]     INT         NOT NULL,
    [name]         NCHAR (128) NOT NULL,
    [description]  NTEXT       NOT NULL,
    [dueDate]      DATETIME    NULL,
    PRIMARY KEY CLUSTERED ([assignmentId] ASC)
);


GO
PRINT N'Creating [dbo].[AssignmentScore]...';


GO
CREATE TABLE [dbo].[AssignmentScore] (
    [assignmentScoresId] INT             IDENTITY (1, 1) NOT NULL,
    [assignmentId]       INT             NOT NULL,
    [studentId]          INT             NOT NULL,
    [score]              INT             NOT NULL,
    [submission]         VARBINARY (MAX) NULL,
    PRIMARY KEY CLUSTERED ([assignmentScoresId] ASC)
);


GO
PRINT N'Creating [dbo].[Course]...';


GO
CREATE TABLE [dbo].[Course] (
    [courseId]       INT          IDENTITY (1, 1) NOT NULL,
    [courseName]     VARCHAR (50) NULL,
    [teacherName]    VARCHAR (50) NULL,
    [syllabusName]   VARCHAR (50) NULL,
    [announcementId] INT          NULL,
    PRIMARY KEY CLUSTERED ([courseId] ASC)
);


GO
PRINT N'Creating [dbo].[Message]...';


GO
CREATE TABLE [dbo].[Message] (
    [msg_id]       INT           IDENTITY (1, 1) NOT NULL,
    [msg_sEmail]   VARCHAR (30)  NOT NULL,
    [msg_rEmail]   VARCHAR (30)  NOT NULL,
    [msg_subject]  VARCHAR (30)  NOT NULL,
    [msg_content]  VARCHAR (MAX) NOT NULL,
    [msg_dateTime] DATETIME      NOT NULL,
    [msg_isRead]   BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([msg_id] ASC)
);


GO
PRINT N'Creating [dbo].[Post]...';


GO
CREATE TABLE [dbo].[Post] (
    [postId]        INT         IDENTITY (1, 1) NOT NULL,
    [postTitle]     NCHAR (100) NOT NULL,
    [postText]      TEXT        NOT NULL,
    [userProfileId] INT         NOT NULL,
    [threadId]      INT         NOT NULL,
    PRIMARY KEY CLUSTERED ([postId] ASC)
);


GO
PRINT N'Creating [dbo].[Thread]...';


GO
CREATE TABLE [dbo].[Thread] (
    [threadId]      INT          IDENTITY (1, 1) NOT NULL,
    [threadText]    TEXT         NOT NULL,
    [threadTitle]   NCHAR (100)  NOT NULL,
    [ownerUserName] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([threadId] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[Assignment]....';


GO
ALTER TABLE [dbo].[Assignment]
    ADD DEFAULT ('No Description Set') FOR [description];


GO
PRINT N'Creating Default Constraint on [dbo].[AssignmentScore]....';


GO
ALTER TABLE [dbo].[AssignmentScore]
    ADD DEFAULT ((0)) FOR [score];


GO
PRINT N'Creating Foreign Key on [dbo].[Assignment]....';


GO
ALTER TABLE [dbo].[Assignment]
    ADD FOREIGN KEY ([courseId]) REFERENCES [dbo].[Course] ([courseId]);


GO
PRINT N'Creating Foreign Key on [dbo].[AssignmentScore]....';


GO
ALTER TABLE [dbo].[AssignmentScore]
    ADD FOREIGN KEY ([assignmentId]) REFERENCES [dbo].[Assignment] ([assignmentId]);


GO
PRINT N'Creating Foreign Key on [dbo].[Course]....';


GO
ALTER TABLE [dbo].[Course]
    ADD FOREIGN KEY ([announcementId]) REFERENCES [dbo].[Announcement] ([announcementId]);


GO
PRINT N'Creating Foreign Key on [dbo].[Post]....';


GO
ALTER TABLE [dbo].[Post]
    ADD FOREIGN KEY ([threadId]) REFERENCES [dbo].[Thread] ([threadId]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '86567561-d645-4899-9a25-5fe2a7661541')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('86567561-d645-4899-9a25-5fe2a7661541')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'e7737c8b-7375-4d17-8a82-de58cd0616a5')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('e7737c8b-7375-4d17-8a82-de58cd0616a5')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'f7fc88de-c218-40a9-9889-7623daf0b913')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('f7fc88de-c218-40a9-9889-7623daf0b913')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0b5f555b-56f9-4dbb-8606-fcc46733c6e2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0b5f555b-56f9-4dbb-8606-fcc46733c6e2')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1eb158e2-901e-4be4-b0f3-b092242512cd')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1eb158e2-901e-4be4-b0f3-b092242512cd')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ee350836-33a3-4522-9931-6eff0e7ab72d')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ee350836-33a3-4522-9931-6eff0e7ab72d')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
