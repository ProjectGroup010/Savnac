/*
Deployment script for Savnac.Database

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Savnac.Database"
:setvar DefaultFilePrefix "Savnac.Database"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [dbo].[Announcement]...';


GO
CREATE TABLE [dbo].[Announcement] (
    [announcementId] INT           IDENTITY (1, 1) NOT NULL,
    [username]       VARCHAR (50)  NULL,
    [title]          VARCHAR (50)  NULL,
    [body]           VARCHAR (MAX) NULL,
    [timePosted]     DATETIME      NULL,
    PRIMARY KEY CLUSTERED ([announcementId] ASC)
);


GO
PRINT N'Creating [dbo].[Assignment]...';


GO
CREATE TABLE [dbo].[Assignment] (
    [assignmentId] INT         IDENTITY (1, 1) NOT NULL,
    [courseId]     INT         NOT NULL,
    [name]         NCHAR (128) NOT NULL,
    [description]  NTEXT       NOT NULL,
    [dueDate]      DATETIME    NULL,
    PRIMARY KEY CLUSTERED ([assignmentId] ASC)
);


GO
PRINT N'Creating [dbo].[AssignmentScore]...';


GO
CREATE TABLE [dbo].[AssignmentScore] (
    [assignmentScoresId] INT             IDENTITY (1, 1) NOT NULL,
    [assignmentId]       INT             NOT NULL,
    [studentId]          INT             NOT NULL,
    [score]              INT             NOT NULL,
    [submission]         VARBINARY (MAX) NULL,
    PRIMARY KEY CLUSTERED ([assignmentScoresId] ASC)
);


GO
PRINT N'Creating [dbo].[Course]...';


GO
CREATE TABLE [dbo].[Course] (
    [courseId]       INT          IDENTITY (1, 1) NOT NULL,
    [courseName]     VARCHAR (50) NULL,
    [teacherName]    VARCHAR (50) NULL,
    [syllabusName]   VARCHAR (50) NULL,
    [announcementId] INT          NULL,
    PRIMARY KEY CLUSTERED ([courseId] ASC)
);


GO
PRINT N'Creating [dbo].[Message]...';


GO
CREATE TABLE [dbo].[Message] (
    [msg_id]       INT           IDENTITY (1, 1) NOT NULL,
    [msg_sEmail]   VARCHAR (30)  NOT NULL,
    [msg_rEmail]   VARCHAR (30)  NOT NULL,
    [msg_subject]  VARCHAR (30)  NOT NULL,
    [msg_content]  VARCHAR (MAX) NOT NULL,
    [msg_dateTime] DATETIME      NOT NULL,
    [msg_isRead]   BIT           NOT NULL,
    PRIMARY KEY CLUSTERED ([msg_id] ASC)
);


GO
PRINT N'Creating [dbo].[Post]...';


GO
CREATE TABLE [dbo].[Post] (
    [postId]        INT         IDENTITY (1, 1) NOT NULL,
    [postTitle]     NCHAR (100) NOT NULL,
    [postText]      TEXT        NOT NULL,
    [userProfileId] INT         NOT NULL,
    [threadId]      INT         NOT NULL,
    PRIMARY KEY CLUSTERED ([postId] ASC)
);


GO
PRINT N'Creating [dbo].[Thread]...';


GO
CREATE TABLE [dbo].[Thread] (
    [threadId]      INT          IDENTITY (1, 1) NOT NULL,
    [threadText]    TEXT         NOT NULL,
    [threadTitle]   NCHAR (100)  NOT NULL,
    [ownerUserName] VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([threadId] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[Assignment]....';


GO
ALTER TABLE [dbo].[Assignment]
    ADD DEFAULT ('No Description Set') FOR [description];


GO
PRINT N'Creating Default Constraint on [dbo].[AssignmentScore]....';


GO
ALTER TABLE [dbo].[AssignmentScore]
    ADD DEFAULT ((0)) FOR [score];


GO
PRINT N'Creating Foreign Key on [dbo].[Assignment]....';


GO
ALTER TABLE [dbo].[Assignment] WITH NOCHECK
    ADD FOREIGN KEY ([courseId]) REFERENCES [dbo].[Course] ([courseId]);


GO
PRINT N'Creating Foreign Key on [dbo].[AssignmentScore]....';


GO
ALTER TABLE [dbo].[AssignmentScore] WITH NOCHECK
    ADD FOREIGN KEY ([assignmentId]) REFERENCES [dbo].[Assignment] ([assignmentId]);


GO
PRINT N'Creating Foreign Key on [dbo].[Course]....';


GO
ALTER TABLE [dbo].[Course] WITH NOCHECK
    ADD FOREIGN KEY ([announcementId]) REFERENCES [dbo].[Announcement] ([announcementId]);


GO
PRINT N'Creating Foreign Key on [dbo].[Post]....';


GO
ALTER TABLE [dbo].[Post] WITH NOCHECK
    ADD FOREIGN KEY ([threadId]) REFERENCES [dbo].[Thread] ([threadId]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Assignment'), OBJECT_ID(N'dbo.AssignmentScore'), OBJECT_ID(N'dbo.Course'), OBJECT_ID(N'dbo.Post'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: {0} [{1}].[{2}]' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
